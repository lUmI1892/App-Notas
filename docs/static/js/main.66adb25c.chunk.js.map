{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFireStore","doc","update","refreshNote","Swal","fire","title","text","icon","confirmButtonText","deleteNote","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValue","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","showCancelButton","confirmButtonColor","cancelButtonColor","then","result","isConfirmed","delete","startDelete","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","backgrountSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loadding","ui","formValues","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isAutenticated","Component","rest","props","PrivateRoute","AppRouter","checking","setchecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.66adb25c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\n// Your web app's Firebase configuration\r\n//const firebaseConfig = {\r\n    //apiKey: \"AIzaSyDyU-sbLqae_qF6m9Tdsd1tZp55-luaLCY\",\r\n    //authDomain: \"react-app-cursos-64725.firebaseapp.com\",\r\n    //projectId: \"react-app-cursos-64725\",\r\n    //storageBucket: \"react-app-cursos-64725.appspot.com\",\r\n    //messagingSenderId: \"677064020504\",\r\n    //appId: \"1:677064020504:web:00f29026e84103c365e96d\"\r\n//};\r\n\r\n//const firebaseConfigTesting = {\r\n  //apiKey: \"AIzaSyCg-YJ30jt885q3cZAJjUPwqJC4CbGSU2c\",\r\n  //authDomain: \"journal-testing-acd2b.firebaseapp.com\",\r\n  //projectId: \"journal-testing-acd2b\",\r\n  //storageBucket: \"journal-testing-acd2b.appspot.com\",\r\n  //messagingSenderId: \"743584423216\",\r\n  //appId: \"1:743584423216:web:0a03798e85bf7fff7bfcf5\"\r\n//};\r\n\r\n//console.log( process.env );\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n//if(  process.env.NODE_ENV === 'test')\r\n  // Initialize Firebase\r\n  //firebase.initializeApp(firebaseConfigTesting);\r\n//else\r\n  // Initialize Firebase\r\n  //firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async(uid)=>{\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo=>{\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        });\r\n        \r\n    })\r\n    return notes;\r\n\r\n}","\r\n\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Delete note',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n}\r\n","\r\n\r\nexport const fileUpload = async (file)=>{\r\n\r\n    const cluodUrl = 'https://api.cloudinary.com/v1_1/dqsdwvs5c/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append( 'upload_preset','react-journal' );\r\n    formData.append( 'file',file );\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cluodUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if( resp.ok ){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            return null;\r\n        }\r\n\r\n\r\n\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n\r\nexport const startNewNote = ()=>{\r\n\r\n    return async( dispatch, getState )=>{\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote ) );\r\n\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note )=>({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note )=>({\r\n\r\n    type: types.notesAddNew,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n\r\n})\r\n\r\nexport const startLoadingNotes = (uid)=>{\r\n    return async( dispatch ) =>{\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes)=>{\r\n    return {\r\n        type: types.notesLoad,\r\n        payload: notes\r\n    }\r\n}\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFireStore = {...note};\r\n\r\n        delete noteToFireStore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFireStore );\r\n        //dispatch(startLoadingNotes(uid));\r\n        dispatch(refreshNote(note));\r\n        Swal.fire({\r\n            title: 'Save!',\r\n            text: note.title,\r\n            icon: 'success',\r\n            confirmButtonText: 'Aceptar'\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const refreshNote = (note)=>({\r\n    \r\n    type:types.notesUpdated,\r\n    payload:{note}\r\n\r\n})\r\n\r\nexport const startUploading = (file)=>{\r\n    return async( dispatch, getState )=>{\r\n\r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title:'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen:()=>{\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        \r\n        dispatch( startSaveNote(activeNote) );\r\n\r\n\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\nexport const startDelete = ( id )=>{\r\n    return async( dispatch, getState )=>{\r\n        const uid = getState().auth.uid;\r\n\r\n\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then(async(result) => {\r\n            if (result.isConfirmed) {\r\n\r\n                await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n                dispatch( deleteNote( id ) );\r\n                \r\n                Swal.fire(\r\n                'Deleted!',\r\n                'Your file has been deleted.',\r\n                'success'\r\n                )\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id)=>({\r\n        type:types.notesDelete,\r\n        payload:id\r\n})\r\n\r\nexport const noteLogout = ()=>({\r\n\r\n    type:types.notesLogoutCleaning\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values,setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState)=>{\r\n        setValues(initialState);\r\n    };\r\n\r\n    const handleInputChange = ({target})=>{\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        });\r\n        \r\n    };\r\n\r\n    return [values,handleInputChange,reset];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    const handleSave = ()=>{\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e)=>{\r\n\r\n        const file = e.target.files[0];\r\n\r\n        if( file )\r\n            dispatch( startUploading( file ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{\r\n                    display:\"none\"\r\n                }}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDelete } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n    const [ formValue, handleInputChange, reset ] = useForm(active);\r\n    const { body, title, id} = formValue;\r\n    const activeId = useRef( active.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if( active.id !== activeId.current ){\r\n            reset(active);\r\n            activeId.current = active.id;\r\n        }\r\n    }, [active, reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote( formValue.id,{...formValue} ));\r\n\r\n    }, [ formValue,dispatch ])\r\n\r\n    const handleDelete = ()=>{\r\n        \r\n        dispatch( startDelete(id) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar/>\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awsome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    name=\"body\"\r\n                    placeholder=\"What happend today\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                >\r\n                </textarea>\r\n\r\n                {\r\n                    active.url\r\n                    &&\r\n                    (\r\n                        <div className=\"notes__image\">\r\n                            <img\r\n                                src={active.url}\r\n                                alt={active.title}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n\r\n            </div>\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                <h3> Select something</h3>\r\n                <span>pr create an entry! <i className=\"far fa-star\"></i></span>\r\n                \r\n            </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err)=>({\r\n    type: types.uiSetError,\r\n    payload:err\r\n});\r\n\r\nexport const removeError = ()=>({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = ()=>({\r\n    type:types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = ()=>({\r\n    type:types.uiFinishLoading\r\n})","import { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n//import swal from 'sweetalert';\r\nimport Swal from 'sweetalert2'\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPassword = ( email, password )=>{\r\n\r\n    return (dispatch)=>{\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword( email,password )\r\n            .then( ({user} )=>{\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n                dispatch( finishLoading() )\r\n            })\r\n            .catch((e)=>{\r\n\r\n                dispatch( finishLoading() );\r\n                Swal.fire(\"Error\", e.message, \"error\");\r\n            })\r\n        //dispatch(login(12345,'Pedro'));\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name )=>{\r\n\r\n    return (dispatch)=>{\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async({user})=>{\r\n\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n\r\n            })\r\n            .catch(e=>{\r\n                Swal.fire(\"Error\", e.message, \"error\");\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleLogin = ()=>{\r\n    return (dispatch)=>{\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({user}) =>{\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const login = (uid,displayName)=>({\r\n    type:types.login,\r\n    payload:{\r\n        uid,\r\n        displayName\r\n        \r\n    }\r\n})\r\n\r\nexport const startLogout = ()=>{\r\n    return async( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = ()=>({\r\n    type:types.logout\r\n})","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport {activeNote} from '../../actions/notes';\r\n\r\n\r\nexport const JournalEntry = ( { id, date, title, body, url} ) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = ()=>{\r\n        \r\n        dispatch(activeNote(id,{ title,body,date,url }));\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n\r\n            {\r\n                (url) &&\r\n                <div\r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgrountSize:'cover',\r\n                    backgroundImage:`url(${url})`\r\n                }}\r\n                >\r\n                </div>\r\n            }\r\n            \r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> { noteDate.format('dddd') } </span>\r\n                <h4>{  noteDate.format('Do') }</h4>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries pointer\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                )\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state=>state.auth)\r\n\r\n    const handleLogout = ()=>{\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew=()=>{\r\n\r\n        dispatch( startNewNote() );\r\n\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n                >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ? (<NoteScreen/>)\r\n                    : (<NothingSelected />)\r\n                }\r\n            </main>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loadding } = useSelector( state=>state.ui );\r\n\r\n    const [formValues,handleInputChange] = useForm({\r\n        email:'nando@gmail.com',\r\n        password:'123456'\r\n    });\r\n\r\n    const {email,password} = formValues;\r\n\r\n    const handleLogin = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        dispatch(startLoginEmailPassword(email,password));\r\n        \r\n    }\r\n\r\n    const handleGoogleLogin = ()=>{\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loadding}\r\n                >\r\n                    Login\r\n                </button>\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google\"/>\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sing in with google</b>\r\n                        </p>\r\n                    </div>      \r\n                </div>\r\n                <Link\r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { setError,removeError } from '../../actions/ui';\r\nimport validator from 'validator';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state=>state.ui );\r\n\r\n    const [formValues,handleInputChange] = useForm({\r\n        name:'pedro',\r\n        email:'nando@gmail.com',\r\n        password:'123456',\r\n        password2:'123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e)=>{\r\n        e.preventDefault();\r\n        if(isFormValid()){\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = ()=>{\r\n\r\n        if( name.trim().length === 0 ){\r\n            dispatch( setError('name is required') );\r\n            return false;\r\n        }else if( !validator.isEmail(email) ){\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        }else if( password !== password2 || password.length < 5 ){\r\n            dispatch( setError('Password should be at least 6 characters and match each other') );\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form \r\n                onSubmit={handleRegister} \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    msgError &&\r\n                    <div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleInputChange}\r\n                    value={name}\r\n\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleInputChange}\r\n                    value={email}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value={password}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value={password2}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Login\r\n                </button>\r\n                \r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n//import { JournalScreen } from '../components/journal/JournalScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route \r\n                        exact \r\n                        path=\"/auth/login\"\r\n                        component={LoginScreen}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen}\r\n                    />\r\n                    <Redirect to=\"/auth/login\"/>\r\n                    \r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route,Redirect} from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAutenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props)=>(\r\n                (!isAutenticated)\r\n                    ?(<Component {...props}/>)\r\n                    :(<Redirect to=\"/\"/>)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAutenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route,Redirect} from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAutenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props)=>(\r\n                (isAutenticated)\r\n                    ?(<Component {...props}/>)\r\n                    :(<Redirect to=\"/login\"/>)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAutenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ checking, setchecking ] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged((user)=>{\r\n            if(user?.uid){\r\n                dispatch( login(user.uid, user.displayName) );\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setchecking(false);\r\n        });\r\n\r\n        \r\n    }, [ dispatch,setchecking,isLoggedIn ])\r\n\r\n    if( checking ){\r\n        return (\r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        isAutenticated={isLoggedIn}\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAutenticated={isLoggedIn}\r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                    />\r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","/*\r\n\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active: {\r\n            id: 'dasdas213dsad',\r\n            titile: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 123124\r\n        }\r\n    }\r\n\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes:[],\r\n    active:null\r\n}\r\n\r\nexport const notesReducer = (state=initialState,action)=>{\r\n\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes:[ action.payload, ...state.notes ]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes:state.notes.map(\r\n                    note=>note.id === action.payload.note.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active:null,\r\n                notes:state.notes.filter(note=>note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                notes:[],\r\n                active:null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\n    const initialState = {\r\n        loadding: false,\r\n        msgError: null\r\n    }\r\n\r\nexport const uiReducer = ( state=initialState, action )=>{\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loadding:true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loadding:false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {createStore, combineReducers,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth:authReducer,\r\n    ui:uiReducer,\r\n    notes:notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","\r\n\r\n/*{\r\n    uid: dadasdasdasdasd,\r\n    nombre:Luis Miguel\r\n}*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state={},action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid:action.payload.uid,\r\n                name:action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}